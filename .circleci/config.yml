version: 2.1
jobs:
  create_and_deploy_front_end_blue:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
            --template-file bucket.yml --region=us-east-1 \
            --stack-name prod-"${CIRCLE_WORKFLOW_ID:0:7}" \
            --parameter-overrides NAME="blue-${CIRCLE_WORKFLOW_ID:0:7}"
      - run: aws s3 cp index.html s3://"blue-${CIRCLE_WORKFLOW_ID:0:7}" 

  promote_to_production_blue:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
            --template-file cloudfront.yml \
            --stack-name cloudfront-"${CIRCLE_WORKFLOW_ID:0:7}" \
            --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID:0:7}"

  get_last_deployment_id:
    docker:
      - image: amazon/aws-cli
    steps:
      - run: |
         yum install -y tar # install the tar
         yum install -y gzip # install the gzip
         aws cloudformation list-exports --query "Exports[?Name==\`PipelineID-blue\`].Value" --no-paginate --output text > ~/last_deployment_id.txt
         cat ~/last_deployment_id.txt
      - persist_to_workspace:
          root: ~/
          paths:
           - last_deployment_id.txt
           
  create_and_deploy_front_end_green:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
            --template-file bucket1.yml --region=us-east-1 \
            --stack-name prod-"${CIRCLE_WORKFLOW_ID:0:8}" \
            --parameter-overrides NAME="green-${CIRCLE_WORKFLOW_ID:0:8}"
      - run: aws s3 cp index.html s3://"green-${CIRCLE_WORKFLOW_ID:0:8}"
      
  promote_to_production_green:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          aws cloudformation deploy \
            --template-file cloudfront1.yml \
            --stack-name cloudfront-"${CIRCLE_WORKFLOW_ID:0:8}" \
            --parameter-overrides PipelineID="${CIRCLE_WORKFLOW_ID:0:8}"
          
  clean_up_old_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run: |
          yum install -y tar # install the tar
          yum install -y gzip # install the gzip
      - attach_workspace:
          at: ~/
      - run : |
          cat ~/last_deployment_id.txt
          OldPipelineID=`cat ~/last_deployment_id.txt`
          echo ${OldPipelineID}
      - run: |
          aws s3 ls|grep blue
          aws --region us-east-1 s3 rm --recursive s3://blue-${OldPipelineID}
          aws cloudformation delete-stack --stack-name "prod-${OldPipelineID}"
          aws cloudformation delete-stack --stack-name "cloudfront-${OldPipelineID}"
          
    
workflows:
  default:
    jobs:
#      - get_last_deployment_id
#      - clean_up_old_front_end:
#          requires:
#            - get_last_deployment_id
      - create_and_deploy_front_end_blue
      - promote_to_production_blue:
          requires:
            - create_and_deploy_front_end_blue
      - get_last_deployment_id:
          requires:
            - promote_to_production_blue
      - create_and_deploy_front_end_green:
          requires:
            - get_last_deployment_id
      - promote_to_production_green:
          requires:
            - create_and_deploy_front_end_green
      - clean_up_old_front_end:
          requires:
            - promote_to_production_green